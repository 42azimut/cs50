# 1번을 해보세요!
n = int(input())

# 2번을 해보세요!
def hanoi_tower(n, fr, tmp, to):
    if(n == 1):
        print("원판 1: %s --> %s" % (fr, to))
    else:
        # 여기에 코드를 작성해보세요!
        hanoi_tower(n-1, fr, to, tmp)
        print("원판 %d: %s --> %s" % (n, fr, to))
        # 여기에 코드를 작성해보세요!
        hanoi_tower(n-1, tmp, fr, to)
# 출력합니다!
#hanoi_tower(n, 1, 2, 3)
hanoi_tower(n, 'A', 'B', 'C')

# n개의 원판을 옮기는 하노이의 탑 문제 | p.86
# 세 개의 막대 A, B, C가 있고, 막대 A에 크기가 모두 다른 n개의 원판이 큰 것부터 아래에 놓이도록 순서대로 쌓여 있습니다. 
# 이 원판들을 모두 막대 C로 옮겨봅시다.

# 단, 원판은 한 번에 한 개씩만 옮길 수 있고, 작은 원판 위에 큰 원판을 절대 놓을 수 없습니다. 모든 원판의 크기는 서로 다르고, 
# 원판의 이동 횟수는 최소로 해야 합니다.

# 이렇게 해보세요!
# 책 p.86~89를 참고해서 풀어보세요!

# 입력되는 양의 정수를 받아서 n에 저장해 보세요.

# 입력 예시
# 3

# 원판의 이동을 출력하는 함수 hanoi_tower(n, fr, tmp, to)를 완성해 보세요. 이때, n은 이동할 원판의 개수, 
# fr는 시작 막대, tmp은 임시 막대, to는 목표 막대임에 유의하세요.

# 출력 예시
# 원판 1: A --> C
# 원판 2: A --> B
# 원판 1: C --> B
# 원판 3: A --> C
# 원판 1: B --> A
# 원판 2: B --> C
# 원판 1: A --> C